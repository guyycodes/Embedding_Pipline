import MenuIcon from '@mui/icons-material/Menu';
import { AppBar, Button, CssBaseline, IconButton, Menu, MenuItem, Toolbar, Typography, useMediaQuery, useTheme } from '@mui/material';
import React, { useEffect, useState } from 'react';
import { TypewriterEffect } from '../../fancy/TypeWritter';
import { useGlobalContext } from '../../context/UseContext';

// import { useNavigate } from 'react-router-dom';
const TEXTCOLOR = '#00FF41'
const BACKGROUNDCOLOR= '#000000';
const SECONDARYCOLOR = '#3B82F6';

const textElements = {
    home: "Home",
    join: "Join",
    learn: "Learn"
}

// Main Navigation component
export const Navigation = () => {
  // State for managing the mobile menu
  const [anchorEl, setAnchorEl] = useState(null);
  const theme = useTheme();
  const isMobile = useMediaQuery(theme.breakpoints.down('sm'));

    const { dispatch } = useGlobalContext()

    const handleLogin = () =>{
        dispatch({ type: 'TOGGLE_AUTH_MODAL', payload: true });
    }

  const scrollNow = (location) =>{
    // Scroll now
    (() => {
      window.scrollTo({
        top: location,
        behavior: 'smooth',
      });
    })();
  }
    /**
   * Handles routing based on the clicked link.
   *
   * @function
   * @param {string} clickedText - The text of the clicked link
   */
    const handleRouting = (route) => {
      navigate(route);
      handleClose(); // Close the menu if open
    };

   // Handler for opening the mobile menu
   const handleMenu = (event) => {
    setAnchorEl(event.currentTarget);
  };

  // Handler for closing the mobile menu
  const handleClose = () => {
    setAnchorEl(null);
  };

  const embossedText = {
    color: TEXTCOLOR,
    margin: '0 15px',
    fontSize: '14px',
    textTransform: 'uppercase',
    letterSpacing: '1px',
    fontWeight: 500,
    textShadow: '-1px -1px 1px rgba(255,255,255,.1), 1px 1px 1px rgba(0,0,0,.9)',
    position: 'relative',
    '&:after': {
      content: '"Home"',
      position: 'absolute',
      top: '1px',
      left: '1px',
      zIndex: -1,
      color: TEXTCOLOR,
    }
  };

  const animatedBackgroundStyle = `
    @keyframes colorChange {
      0%, 100% { background-position: 0% 100%; }
      20% { background-position: 100% 0%; }
    }
  `;

  const inspiringMessage = "HUNT. EXPLOIT. DOMINATE. SECURE.";

  return (
    <>
      <CssBaseline />
      <style>{animatedBackgroundStyle}</style>
      <AppBar position="static" style={{
        background: 'linear-gradient(30deg, #000000, #3B82F6, #000000)',
        backgroundSize: '200% 200%',
        animation: 'colorChange 10s ease infinite',
        boxShadow: '0 4px 6px rgba(0, 0, 0, 0.1)',
        padding: '10px 0',
        borderRadius: '25px',
      }}>
        <Toolbar style={{
          display: 'flex',
          justifyContent: 'space-between',
          alignItems: 'center',
          width: '100%',
          padding: '0 24px',
        }}>
          {/* Logo */}
          <Typography variant="h5" style={{
            fontFamily: "'Playfair Display', serif",
            fontWeight: 700,
            color: TEXTCOLOR,
            display: 'flex',
            alignItems: 'center',
            letterSpacing: '2px',
            textShadow: '2px 2px 4px rgba(0,0,0,0.5)',
          }}>
            <span style={{ fontSize: '32px', marginRight: '10px' }}>A</span>rchitect
          </Typography>

          {/* Centered Typewriter Effect */}
          {!isMobile && (
            <div style={{ flex: 1, display: 'flex', justifyContent: 'center' }}>
              <TypewriterEffect text={inspiringMessage} />
            </div>
          )}

          {/* Navigation Buttons */}
          {isMobile ? (
            <>
              <IconButton
                size="large"
                edge="start"
                aria-label="menu"
                onClick={handleMenu}
                style={{ color: TEXTCOLOR }}
              >
                <MenuIcon />
              </IconButton>
              <Menu
                anchorEl={anchorEl}
                anchorOrigin={{
                  vertical: 'top',
                  horizontal: 'right',
                }}
                keepMounted
                transformOrigin={{
                  vertical: 'top',
                  horizontal: 'right',
                }}
                open={Boolean(anchorEl)}
                onClose={handleClose}
              >
                <MenuItem onClick={() => scrollNow(0)}>{textElements.home}</MenuItem>
                <MenuItem onClick={() => handleLogin()}>textElements.join</MenuItem>
                <MenuItem onClick={() => scrollNow(600)}>textElements.learn</MenuItem>
              </Menu>
            </>
          ) : (
            <div style={{ display: 'flex', alignItems: 'center' }}>
              <Button
                onClick={() => scrollNow(0)}
                color= {TEXTCOLOR}
                sx={embossedText}
              >{textElements.home}
              </Button>
              <Button 
                color={TEXTCOLOR} 
                onClick={() => handleLogin()}
                sx={embossedText}
              >{textElements.join}
              </Button>
              <Button 
                variant="contained" 
                onClick={() => scrollNow(600)}
                sx={{
                  color: TEXTCOLOR,
                  borderRadius: '5px',
                  background: '#000000',
                  boxShadow: '0 4px 6px rgba(212, 175, 55, 0.3)',
                  border:'.5px solid var(--black)',
                  textTransform: 'uppercase',
                  fontWeight: 600,
                  padding: '8px 20px',
                  letterSpacing: '1px',
                  transition: 'all 0.3s ease',
                }}
              >
                {textElements.learn}
              </Button>
            </div>
          )}
        </Toolbar>

        {/* Typewriter Effect for Mobile */}
        {isMobile && (
          <div style={{ display: 'flex', justifyContent: 'center', padding: '10px 0' }}>
            <TypewriterEffect text={inspiringMessage} />
          </div>
        )}
      </AppBar>
    </>
  );
};