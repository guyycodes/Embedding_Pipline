
import {  Typography} from '@mui/material';
import React, { useEffect, useState } from 'react';
// import { useNavigate } from 'react-router-dom';

// TypewriterEffect component for animating text
export const TypewriterEffect = ({ text }) => {
  const [displayText, setDisplayText] = useState('');
  const [index, setIndex] = useState(0);
  const [isTyping, setIsTyping] = useState(true);
  const [isPaused, setIsPaused] = useState(false);

  useEffect(() => { 
    if (isPaused) {
      const pauseTimer = setTimeout(() => {
        setIsPaused(false);
        setIsTyping(!isTyping);
        setIndex(isTyping ? text.length : 0);
      }, 1000); // Pause for 1 second before changing direction
      return () => clearTimeout(pauseTimer);
    }

    if (isTyping && index <= text.length) {
      const timer = setTimeout(() => {
        setDisplayText(text.slice(0, index));
        setIndex((prevIndex) => prevIndex + 1);
      }, 100); // Adjust typing speed
      return () => clearTimeout(timer);
    } else if (!isTyping && index > 0) {
      const timer = setTimeout(() => {
        setDisplayText(text.slice(0, index - 1));
        setIndex((prevIndex) => prevIndex - 1);
      }, 50); // Adjust untyping speed
      return () => clearTimeout(timer);
    } else {
      setIsPaused(true);
    }
  }, [index, text, isTyping, isPaused]);

  return (
    <Typography
      variant="body1"
      style={{
        fontFamily: "'Montserrat', sans-serif",
        color: 'White',
        textShadow: '1px 1px 2px rgba(0,0,0,0.5)',
        minHeight: '24px', // Prevent layout shift
        minWidth: '20ch', // Ensure consistent width
      }}
    >
      {displayText}
    </Typography>
  );
};