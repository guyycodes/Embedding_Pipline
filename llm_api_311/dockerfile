# Use a Debian-based Python 3.11 slim image
FROM python:3.11-slim

# Prevent Python from writing pyc files & enable unbuffered logging
ENV PYTHONDONTWRITEBYTECODE=1
ENV PYTHONUNBUFFERED=1

# Update package index & install minimal system packages:
#   - build-base for compiling any dependencies with C-extensions
#   - curl, nano, iputils (ping) for diagnostics
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    python3-dev \
    nano \
    iputils-ping \
    libopenblas-dev \
    gfortran \
    pkg-config \
    bash \
    curl \
 && rm -rf /var/lib/apt/lists/*

# Set a working directory
WORKDIR /app

# Create a venv named 'docs_pipeline_311'
RUN python -m venv /app/llm_api_311

# Make sure we use the virtualenv
ENV PATH="/app/llm_api_311/bin:$PATH"
ENV BLIS_ARCH="generic"

# Copy and install Python dependencies into the venv
COPY requirements.txt /app/

RUN pip install --upgrade pip && \
    # Install numpy and other scientific packages first
    pip install --no-cache-dir numpy cython && \
    # Then install the rest of the requirements
    pip install --no-cache-dir -r requirements.txt

# Then copy the rest of your application
COPY . /app

# Expose the FastAPI port (adjust if needed)
EXPOSE 8675

# Run main.py as default
CMD ["python", "main.py"]